body {
    margin: 0;
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}

.back{
    background-color:#cec0b3;
}

button.active{
    background-color: #8b4637;
    color: floralwhite;
}

.mainContainer{
    display: grid;
    grid-template-columns: 0.5fr 10fr 10fr 0.5fr;
    /*grid-template-rows: 2% auto auto 2%;*/
    grid-gap: 1em;
    grid-auto-rows: minmax(800px,1600px);
    height: 100%;
    overflow-y: scroll;
    padding: 1em;
}

button {
    color: #444444;
    background: #F3F3F3;
    border: 1px #DADADA solid;
    padding: 5px 10px;
    border-radius: 2px;
    font-weight: bold;
    font-size: 9pt;
    outline: none;
}

.button {
    color: #444444;
    background: #F3F3F3;
    border: 1px #DADADA solid;
    padding: 5px 10px;
    border-radius: 2px;
    font-weight: bold;
    font-size: 9pt;
    outline: none;
}

button:hover {
    border: 1px #C6C6C6 solid;
    box-shadow: 1px 1px 1px #EAEAEA;
}

button:active {
    box-shadow: inset 1px 1px 1px #DFDFDF;
}

.forceRowOne{
    grid-row: 1/2;
    display: grid;
    grid-template-columns: 60px repeat(4, 1fr);
}

.forceRowTwo{
    grid-row: 2/3;
    display: grid;
    grid-template-columns: 60px repeat(9, 1fr);
}

.forceRowThree{
    grid-row: 3/4;
}

.hcenter{
    justify-self:center;
}
.vcenter{
    align-self:center;
}

.gcol1{
    grid-column: 1
}
.gcol2{
    grid-column: 2
}
.gcol3{
    grid-column: 3
}
.gcol4{
    grid-column: 4
}
.gcol5{
    grid-column: 5
}
.gcol6{
    grid-column: 6
}
.gcol7{
    grid-column: 7
}
.gcol8{
    grid-column: 8
}
.gcol9{
    grid-column: 9
}

.table{
    display: table;
}
.table-cell{
    display: table-cell;
}
.width100{
    width: 100%;
}

.height100{
    height: 100%;
}
.vertical-align-middle{
    vertical-align: middle;
}
.text-align-centre{
    text-align: center;
}

.tsneContainer{
    grid-column: 1/3;
    height:inherit;
    background-color: dimgray;
}

.tsneElementsContainer{
    /* its own properites as a child of the parent grid -- tsneContainer*/
    grid-column: 1/3;
    /*Properites of itself being a grid*/
    display: grid;
    grid-template-columns: 1fr;
    grid-row-gap : 1em;
    grid-template-rows: 1fr 25fr;
    height: inherit;
}

.controls{
    grid-row: 1/2;
    background-color: burlywood;
    padding: 1em 0.5em;
}

#tsneSVG{
    grid-row: 2/3;
    justify-self: stretch;
    align-self: stretch;
    background-color: darkslategrey;
}

#clusterForceSVG{
    grid-row: 4/5;
    justify-self: stretch;
    align-self: stretch;
    background: #ad2000;
    opacity: 0.5;
}

.saveCluster{
    grid-row: 2/3;
    justify-self: stretch;
    align-self: stretch;
    display: grid;
    grid-template-columns: 1fr 3fr;
    grid-column-gap: 1em;
    /*grid-template-columns: repeat(2, 1fr 3fr);*/
    /*background: #ad2000;
    opacity: 0.5;	*/
}

.saveClusterButton,.changeClusterButton {
    float: right;
    min-width: 120px;
    max-width: 150px;
    margin-right: 50px;
}

.changeCluster{
    grid-row: 3/4;
    justify-self: stretch;
    align-self: stretch;
    display: grid;
    grid-template-columns: 1fr 3fr;
    grid-column-gap: 1em;
}

.labelledPoint{
    fill:burlywood;
}

textarea, #parentDropDownID{
    resize:none;
    float: left;
    width: 250;
    min-width: 100;
    overflow: hidden;
    text-align: start;
    font-size: 12;
    max-height: 26;
    height: 26
}

.labelledNode circle{
    fill: teal;
    stroke: white;
    stroke-width: 1;
}

.labelledNode text{
    fill: floralwhite;
}

.clusterForceElementsContainer{
    /* its own properites as a child of the parent grid*/
    grid-column: 1/3;
    /*Properites of itself being a grid*/
    display: grid;
    grid-template-columns: 1fr;
    grid-row-gap : 1em;
    grid-template-rows: 2fr 2fr 2fr 25fr;
    height: inherit;
}

#ClusterForceControls{
    display: grid;
    grid-row-gap: 0.5em;
}

.clusterForceContainer{
    grid-column: 3/5;
    height: inherit;
    background-color: dimgray;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.labelledPoint text{
    fill:#8b4637;
    font-size:1.25em;
}

.labelledPoint rect{
    fill:black;
    stroke: none;
}

.invisible {
    visibility: hidden;
}
.removed {
    visibility: hidden;
}

.deleted {
    visibility: hidden;
}

.visible{
    visibility: visible;
}

.pointSVG.hovered{
    fill: rgb(80,80,80);
}

.pointSVG{
    stroke: #4a2d0a;
}

.lasso path {
    stroke: rgb(80,80,80);
    stroke-width:2px;
}

.lasso .drawn {
    fill-opacity:.05 ;
}

.lasso .loop_close {
    fill:none;
    stroke-dasharray: 4,4;
}

.lasso .origin {
    fill:#3399FF;
    fill-opacity:.5;
}

.not_possible{
    fill: rgb(200,200,200);
}

.possible {
    fill: #EC888C;
}

.selected{
    fill: red;
}

.selectedbefore.colored{
    fill: springgreen;
}

.link {
  stroke: #000;
  stroke-width: 1.5px;
}

.horzdiv{
    position: relative;
    display: inline-block;
    width: 10px;
    height: 600px;
    background-color: grey;
}

circle.identifiedAsRadialCentre{
    fill: green;
}

circle.identifiedAsChildren{
    fill: black;
}

.ghostCircle.show{
    display:block;
}

.ghostCircle, .activeDrag .ghostCircle{
    display: none;
}